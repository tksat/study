{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/ouchi/html/study/with-firebase-app/context/userContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, createContext, useContext } from 'react';\nimport firebase from '../firebase/clientApp';\nexport var UserContext = createContext();\nexport default function UserContextComp(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(null),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  var _useState2 = useState(true),\n      loadingUser = _useState2[0],\n      setLoadingUser = _useState2[1]; // Helpful, to update the UI accordingly.\n\n\n  useEffect(function () {\n    // Listen authenticated user\n    var unsubscriber = firebase.auth().onAuthStateChanged( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(user) {\n        var uid, displayName, email, photoURL;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                try {\n                  if (user) {\n                    // User is signed in.\n                    uid = user.uid, displayName = user.displayName, email = user.email, photoURL = user.photoURL; // You could also look for the user doc in your Firestore (if you have one):\n                    // const userDoc = await firebase.firestore().doc(`users/${uid}`).get()\n\n                    setUser({\n                      uid: uid,\n                      displayName: displayName,\n                      email: email,\n                      photoURL: photoURL\n                    });\n                  } else setUser(null);\n                } catch (error) {// Most probably a connection error. Handle appropriately.\n                } finally {\n                  setLoadingUser(false);\n                }\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }()); // Unsubscribe auth listener on unmount\n\n    return function () {\n      return unsubscriber();\n    };\n  }, []);\n  return __jsx(UserContext.Provider, {\n    value: {\n      user: user,\n      setUser: setUser,\n      loadingUser: loadingUser\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, children);\n} // Custom hook that shorhands the context!\n\n_s(UserContextComp, \"PlBfpwktDARw4tD2q6Z6jzxNSUg=\");\n\n_c = UserContextComp;\nexport var useUser = function useUser() {\n  _s2();\n\n  return useContext(UserContext);\n};\n\n_s2(useUser, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"UserContextComp\");","map":{"version":3,"sources":["/Users/ouchi/html/study/with-firebase-app/context/userContext.js"],"names":["useState","useEffect","createContext","useContext","firebase","UserContext","UserContextComp","children","user","setUser","loadingUser","setLoadingUser","unsubscriber","auth","onAuthStateChanged","uid","displayName","email","photoURL","error","useUser"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,aAA9B,EAA6CC,UAA7C,QAA+D,OAA/D;AACA,OAAOC,QAAP,MAAqB,uBAArB;AAEA,OAAO,IAAMC,WAAW,GAAGH,aAAa,EAAjC;AAEP,eAAe,SAASI,eAAT,OAAuC;AAAA;;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAAA,kBAC5BP,QAAQ,CAAC,IAAD,CADoB;AAAA,MAC7CQ,IAD6C;AAAA,MACvCC,OADuC;;AAAA,mBAEdT,QAAQ,CAAC,IAAD,CAFM;AAAA,MAE7CU,WAF6C;AAAA,MAEhCC,cAFgC,kBAEC;;;AAErDV,EAAAA,SAAS,CAAC,YAAM;AACd;AACA,QAAMW,YAAY,GAAGR,QAAQ,CAACS,IAAT,GAAgBC,kBAAhB;AAAA,2EAAmC,iBAAON,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACtD,oBAAI;AACF,sBAAIA,IAAJ,EAAU;AACR;AACQO,oBAAAA,GAFA,GAEsCP,IAFtC,CAEAO,GAFA,EAEKC,WAFL,GAEsCR,IAFtC,CAEKQ,WAFL,EAEkBC,KAFlB,GAEsCT,IAFtC,CAEkBS,KAFlB,EAEyBC,QAFzB,GAEsCV,IAFtC,CAEyBU,QAFzB,EAGR;AACA;;AACAT,oBAAAA,OAAO,CAAC;AAAEM,sBAAAA,GAAG,EAAHA,GAAF;AAAOC,sBAAAA,WAAW,EAAXA,WAAP;AAAoBC,sBAAAA,KAAK,EAALA,KAApB;AAA2BC,sBAAAA,QAAQ,EAARA;AAA3B,qBAAD,CAAP;AACD,mBAND,MAMOT,OAAO,CAAC,IAAD,CAAP;AACR,iBARD,CAQE,OAAOU,KAAP,EAAc,CACd;AACD,iBAVD,SAUU;AACRR,kBAAAA,cAAc,CAAC,KAAD,CAAd;AACD;;AAbqD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAnC;;AAAA;AAAA;AAAA;AAAA,QAArB,CAFc,CAkBd;;AACA,WAAO;AAAA,aAAMC,YAAY,EAAlB;AAAA,KAAP;AACD,GApBQ,EAoBN,EApBM,CAAT;AAsBA,SACE,MAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEJ,MAAAA,IAAI,EAAJA,IAAF;AAAQC,MAAAA,OAAO,EAAPA,OAAR;AAAiBC,MAAAA,WAAW,EAAXA;AAAjB,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QADH,CADF;AAKD,C,CAED;;GAjCwBD,e;;KAAAA,e;AAkCxB,OAAO,IAAMc,OAAO,GAAG,SAAVA,OAAU;AAAA;;AAAA,SAAMjB,UAAU,CAACE,WAAD,CAAhB;AAAA,CAAhB;;IAAMe,O","sourcesContent":["import { useState, useEffect, createContext, useContext } from 'react'\nimport firebase from '../firebase/clientApp'\n\nexport const UserContext = createContext()\n\nexport default function UserContextComp({ children }) {\n  const [user, setUser] = useState(null)\n  const [loadingUser, setLoadingUser] = useState(true) // Helpful, to update the UI accordingly.\n\n  useEffect(() => {\n    // Listen authenticated user\n    const unsubscriber = firebase.auth().onAuthStateChanged(async (user) => {\n      try {\n        if (user) {\n          // User is signed in.\n          const { uid, displayName, email, photoURL } = user\n          // You could also look for the user doc in your Firestore (if you have one):\n          // const userDoc = await firebase.firestore().doc(`users/${uid}`).get()\n          setUser({ uid, displayName, email, photoURL })\n        } else setUser(null)\n      } catch (error) {\n        // Most probably a connection error. Handle appropriately.\n      } finally {\n        setLoadingUser(false)\n      }\n    })\n\n    // Unsubscribe auth listener on unmount\n    return () => unsubscriber()\n  }, [])\n\n  return (\n    <UserContext.Provider value={{ user, setUser, loadingUser }}>\n      {children}\n    </UserContext.Provider>\n  )\n}\n\n// Custom hook that shorhands the context!\nexport const useUser = () => useContext(UserContext)\n"]},"metadata":{},"sourceType":"module"}